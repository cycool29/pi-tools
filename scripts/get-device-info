#!/bin/bash

OS="$(grep PRETTY_NAME  < /etc/os-release | tr -d '"' | awk -F= '{print $2}')" 
OS_ARCH="$(dpkg --print-architecture)" 
KERNEL="$(uname -mrs)" 
MODEL="$(grep Model  < /proc/cpuinfo | xargs | sed 's/Model : //g')" 
RAM_SIZE="$(echo "scale=2 ; $( awk '/MemTotal/ {print $2}' /proc/meminfo ) / 1024000 " | bc ) GB"
IMAGE_VERSION="$(grep 'Raspberry Pi reference'  < /etc/rpi-issue | sed 's/Raspberry Pi reference //g')" 
INSTALLED_PACKAGES="dpkg ($(dpkg --get-selections | grep -vc deinstall))$([ -a "$(command -v snap)" ] && if ! snap list 2>&1 | grep -q "No snaps are installed"; then echo ", snap ($(snap list | tail -n +2 | wc -l))"; fi)$([ -a "$(command -v flatpak)" ] && if flatpak info 2>/dev/null | grep -q "Note that the directories"; then export XDG_DATA_DIRS="$XDG_DATA_DIRS:$(flatpak info 2>/dev/null | tail -n +4 | head -n 2 | xargs | sed 's/ /:/g')"; fi && [ "$(flatpak list)" != "" ] && echo ", flatpak ($(flatpak list | grep -vc "Application ID"))")$([ -a "$HOME/.local/share/applications/pi-apps.desktop" ] && [ "$($(grep Exec < "$HOME/.local/share/applications/pi-apps.desktop" | sed s/Exec=//g | sed s/gui/api/g) list_apps installed)" != "" ] && echo ", pi-apps ($("$(grep Exec < "$HOME/.local/share/applications/pi-apps.desktop" | sed s/Exec=//g | sed s/gui/api/g)" list_apps installed | wc -l))")"
UPTIME="$(uptime -p | sed "s/up //g" | sed s/,//g)" 
RESOLUTION="$(fbset -i  | grep "mode " | tr -d '"' | tr -d "mode ")" 
DESKTOP_ENVIRONMENT="$XDG_CURRENT_DESKTOP" 
WINDOW_MANAGER="$(xprop -id "$(xprop -root -notype _NET_SUPPORTING_WM_CHECK | sed 's/.*# //')" -notype -len 100 -f _NET_WM_NAME 8t | grep WM_NAME | sed 's/.*= //g' | xargs)" 
OPENGL_VERSION="$(glxinfo -B | grep 'OpenGL ES profile version string' | sed 's/OpenGL ES profile version string: //g')"
GPU_MODEL="$(glxinfo -B | grep 'Device\|Vendor' | sed 's/.*Device: //g' | sed 's/.*Vendor: //g' | sed -e 's/([^()]*)//g' | xargs)"
HOSTNAME="$(hostname)"
LOCAL_IP="$(hostname -I | awk '{print $1}')"
PUBLIC_IP="$(wget -qO- ifconfig.me)"
CURRENT_USER="$(whoami)"
SOC_VERSION="$(grep Hardware < /proc/cpuinfo | cut -c12-18)"
GPU_TEMPERATURE="$(sed s/temp=//g <<< $(vcgencmd measure_temp))"

echo -e "${GREEN}Operating system   ${NORMAL} : $(if [ "${OS}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${OS}"; fi)"
echo -e "${GREEN}OS Architecture    ${NORMAL} : $(if [ "${OS_ARCH}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${OS_ARCH}"; fi)"
echo -e "${GREEN}Kernel             ${NORMAL} : $(if [ "${KERNEL}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${KERNEL}"; fi)"
echo -e "${GREEN}Raspberry Pi Model ${NORMAL} : $(if [ "${MODEL}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${MODEL}"; fi)"
echo -e "${GREEN}RAM Size           ${NORMAL} : $(if [ "${RAM_SIZE}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${RAM_SIZE}"; fi)"
echo -e "${GREEN}Image Version      ${NORMAL} : $(if [ "${IMAGE_VERSION}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${IMAGE_VERSION}"; fi)"
echo -e "${GREEN}Installed Packages ${NORMAL} : $(if [ "${INSTALLED_PACKAGES}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${INSTALLED_PACKAGES}"; fi)"
echo -e "${GREEN}Uptime             ${NORMAL} : $(if [ "${UPTIME}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${UPTIME}"; fi)"
echo -e "${GREEN}Resolution         ${NORMAL} : $(if [ "${RESOLUTION}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${RESOLUTION}"; fi)"
echo -e "${GREEN}Desktop Environment${NORMAL} : $(if [ "${DESKTOP_ENVIRONMENT}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${DESKTOP_ENVIRONMENT}"; fi)"
echo -e "${GREEN}Window Manager     ${NORMAL} : $(if [ "${WINDOW_MANAGER}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${WINDOW_MANAGER}"; fi)"
echo -e "${GREEN}OpenGL Version     ${NORMAL} : $(if [ "${OPENGL_VERSION}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${OPENGL_VERSION}"; fi)"
echo -e "${GREEN}GPU Model          ${NORMAL} : $(if [ "${GPU_MODEL}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${GPU_MODEL}"; fi)"
echo -e "${GREEN}Local IP Address   ${NORMAL} : $(if [ "${LOCAL_IP}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${LOCAL_IP}"; fi)"
echo -e "${GREEN}Public IP Address  ${NORMAL} : $(if [ "${PUBLIC_IP}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${PUBLIC_IP}"; fi)"
echo -e "${GREEN}Current User       ${NORMAL} : $(if [ "${CURRENT_USER}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${CURRENT_USER}"; fi)"
echo -e "${GREEN}SoC Version        ${NORMAL} : $(if [ "${SOC_VERSION}" == "" ]; then echo -e "${DARK_GREY}Not available${NORMAL}"; else echo "${SOC_VERSION}"; fi)"
